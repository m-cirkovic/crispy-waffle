"""Change id_value and id33_value to bytea

Revision ID: 097e5ee4e4a0
Revises: 1.1
Create Date: 2025-01-30 10:47:25.374047

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '097e5ee4e4a0'
down_revision: Union[str, None] = '1.1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('identity', sa.Column('id_value_new', postgresql.BYTEA(), nullable=False))
    op.add_column('identity', sa.Column('id33_value_new', postgresql.BYTEA(), nullable=False))

    # Step 2: Drop the old columns
    op.drop_column('identity', 'id_value')
    op.drop_column('identity', 'id33_value')

    # Step 3: Rename the new columns to the original column names
    op.alter_column('identity', 'id_value_new', new_column_name='id_value')
    op.alter_column('identity', 'id33_value_new', new_column_name='id33_value')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('identity', sa.Column('id_value_new', sa.BIGINT(), nullable=False))
    op.add_column('identity', sa.Column('id33_value_new', sa.BIGINT(), nullable=False))

    # Step 2: Drop the new columns
    op.drop_column('identity', 'id_value')
    op.drop_column('identity', 'id33_value')

    # Step 3: Rename the old columns to the original column names
    op.alter_column('identity', 'id_value_new', new_column_name='id_value')
    op.alter_column('identity', 'id33_value_new', new_column_name='id33_value')
    # ### end Alembic commands ###
